// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { VideoGetAllData, VideoGetAllResponse, VideoGetAllError, VideoDeleteData, VideoDeleteResponse, VideoDeleteError, VideoGetData, VideoGetResponse, VideoGetError, ComicGetAllData, ComicGetAllResponse, ComicGetAllError, ComicDeleteData, ComicDeleteError, ComicGetData, ComicGetResponse, ComicGetError, ComicDetailData, ComicDetailResponse2, ComicDetailError, ComicUnfavorData, ComicUnfavorResponse, ComicUnfavorError, ComicFavorData, ComicFavorResponse, ComicFavorError, ComicRefreshData, ComicRefreshResponse, ComicRefreshError, ComicRenameData, ComicRenameResponse, ComicRenameError, ComicPageGetData, ComicPageGetError, ComicPageLikeData, ComicPageLikeError, ComicPageSetCoverData, ComicPageSetCoverError, ImageGetAllData, ImageGetAllResponse, ImageGetAllError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class VideosService {
    /**
     * Videocbv.Get All
     */
    public static videoGetAll<ThrowOnError extends boolean = false>(options?: Options<VideoGetAllData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<VideoGetAllResponse, VideoGetAllError, ThrowOnError>({
            url: '/api/videos',
            ...options
        });
    }
    
    /**
     * Videocbv.Delete
     */
    public static videoDelete<ThrowOnError extends boolean = false>(options: Options<VideoDeleteData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<VideoDeleteResponse, VideoDeleteError, ThrowOnError>({
            url: '/api/videos/{id}',
            ...options
        });
    }
    
    /**
     * Videocbv.Get
     */
    public static videoGet<ThrowOnError extends boolean = false>(options: Options<VideoGetData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<VideoGetResponse, VideoGetError, ThrowOnError>({
            url: '/api/videos/{id}',
            ...options
        });
    }
    
}

export class ComicsService {
    /**
     * Comiccbv.Get All
     */
    public static comicGetAll<ThrowOnError extends boolean = false>(options?: Options<ComicGetAllData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ComicGetAllResponse, ComicGetAllError, ThrowOnError>({
            url: '/api/comics',
            ...options
        });
    }
    
    /**
     * Comiccbv.Delete
     */
    public static comicDelete<ThrowOnError extends boolean = false>(options: Options<ComicDeleteData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<unknown, ComicDeleteError, ThrowOnError>({
            url: '/api/comics/{id}',
            ...options
        });
    }
    
    /**
     * Comiccbv.Get
     */
    public static comicGet<ThrowOnError extends boolean = false>(options: Options<ComicGetData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<ComicGetResponse, ComicGetError, ThrowOnError>({
            url: '/api/comics/{id}',
            ...options
        });
    }
    
    /**
     * Comiccbv.Detail
     */
    public static comicDetail<ThrowOnError extends boolean = false>(options: Options<ComicDetailData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<ComicDetailResponse2, ComicDetailError, ThrowOnError>({
            url: '/api/comics/{id}/detail',
            ...options
        });
    }
    
    /**
     * Comiccbv.Unfavor
     */
    public static comicUnfavor<ThrowOnError extends boolean = false>(options: Options<ComicUnfavorData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<ComicUnfavorResponse, ComicUnfavorError, ThrowOnError>({
            url: '/api/comics/{id}/favor',
            ...options
        });
    }
    
    /**
     * Comiccbv.Favor
     */
    public static comicFavor<ThrowOnError extends boolean = false>(options: Options<ComicFavorData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<ComicFavorResponse, ComicFavorError, ThrowOnError>({
            url: '/api/comics/{id}/favor',
            ...options
        });
    }
    
    /**
     * Comiccbv.Refresh
     */
    public static comicRefresh<ThrowOnError extends boolean = false>(options: Options<ComicRefreshData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<ComicRefreshResponse, ComicRefreshError, ThrowOnError>({
            url: '/api/comics/{id}/refresh',
            ...options
        });
    }
    
    /**
     * Comiccbv.Rename
     */
    public static comicRename<ThrowOnError extends boolean = false>(options: Options<ComicRenameData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<ComicRenameResponse, ComicRenameError, ThrowOnError>({
            url: '/api/comics/{id}/rename',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class ComicpageService {
    /**
     * Comicpagecbv.Get
     */
    public static comicPageGet<ThrowOnError extends boolean = false>(options: Options<ComicPageGetData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<unknown, ComicPageGetError, ThrowOnError>({
            url: '/api/comics/{id}/{page}',
            ...options
        });
    }
    
    /**
     * Comicpagecbv.Like
     */
    public static comicPageLike<ThrowOnError extends boolean = false>(options: Options<ComicPageLikeData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<unknown, ComicPageLikeError, ThrowOnError>({
            url: '/api/comics/{id}/{page}/like',
            ...options
        });
    }
    
    /**
     * Comicpagecbv.Set Cover
     */
    public static comicPageSetCover<ThrowOnError extends boolean = false>(options: Options<ComicPageSetCoverData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<unknown, ComicPageSetCoverError, ThrowOnError>({
            url: '/api/comics/{id}/{page}/cover',
            ...options
        });
    }
    
}

export class ImagesService {
    /**
     * Imagecbv.Get All
     */
    public static imageGetAll<ThrowOnError extends boolean = false>(options?: Options<ImageGetAllData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ImageGetAllResponse, ImageGetAllError, ThrowOnError>({
            url: '/api/images',
            ...options
        });
    }
    
}