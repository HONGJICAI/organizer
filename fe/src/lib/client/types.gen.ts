// This file is auto-generated by @hey-api/openapi-ts

/**
 * A lightweight utility class intended for use with simple message-returning endpoints.
 */
export type ApiMessage = {
    detail: string;
};

export type ComicDetailResponse = {
    pageDetails: Array<ComicPageDetailResponse>;
};

export type ComicEntity = {
    id: number;
    size: number;
    name: string;
    path: string;
    updateTime: string;
    archived: boolean;
    favorited: boolean;
    lastViewedTime?: string | null;
    lastViewedPosition: number;
    coverPosition: number;
    entityUpdateTime: string;
    page: number;
};

export type ComicPageDetailResponse = {
    name: string;
};

export type FavorResponse = {
    favorited: boolean;
};

export type FileEntity = {
    id: number;
    size: number;
    name: string;
    path: string;
    updateTime: string;
    archived: boolean;
    favorited: boolean;
    lastViewedTime?: string | null;
    lastViewedPosition: number;
    coverPosition: number;
    entityUpdateTime: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type MessageResponse = {
    msg: string;
};

export type RenameRequest = {
    name: string;
};

export type RenameResponse = {
    name: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type VideoEntity = {
    id: number;
    size: number;
    name: string;
    path: string;
    updateTime: string;
    archived: boolean;
    favorited: boolean;
    lastViewedTime?: string | null;
    lastViewedPosition: number;
    coverPosition: number;
    entityUpdateTime: string;
    durationInSecond: number;
};

export type VideoGetAllData = {
    body?: never;
    path?: never;
    query?: {
        top?: number;
    };
    url: '/api/videos';
};

export type VideoGetAllErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type VideoGetAllError = VideoGetAllErrors[keyof VideoGetAllErrors];

export type VideoGetAllResponses = {
    /**
     * Successful Response
     */
    200: Array<VideoEntity>;
};

export type VideoGetAllResponse = VideoGetAllResponses[keyof VideoGetAllResponses];

export type VideoDeleteData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        permanent?: boolean;
    };
    url: '/api/videos/{id}';
};

export type VideoDeleteErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type VideoDeleteError = VideoDeleteErrors[keyof VideoDeleteErrors];

export type VideoDeleteResponses = {
    /**
     * Successful Response
     */
    200: ApiMessage;
};

export type VideoDeleteResponse = VideoDeleteResponses[keyof VideoDeleteResponses];

export type VideoGetData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/videos/{id}';
};

export type VideoGetErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type VideoGetError = VideoGetErrors[keyof VideoGetErrors];

export type VideoGetResponses = {
    /**
     * Successful Response
     */
    200: VideoEntity;
};

export type VideoGetResponse = VideoGetResponses[keyof VideoGetResponses];

export type ComicGetAllData = {
    body?: never;
    path?: never;
    query?: {
        fileMiss?: unknown;
        top?: number;
    };
    url: '/api/comics';
};

export type ComicGetAllErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicGetAllError = ComicGetAllErrors[keyof ComicGetAllErrors];

export type ComicGetAllResponses = {
    /**
     * Successful Response
     */
    200: Array<ComicEntity>;
};

export type ComicGetAllResponse = ComicGetAllResponses[keyof ComicGetAllResponses];

export type ComicDeleteData = {
    body?: never;
    path: {
        id: number;
    };
    query?: {
        permanent?: boolean;
    };
    url: '/api/comics/{id}';
};

export type ComicDeleteErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicDeleteError = ComicDeleteErrors[keyof ComicDeleteErrors];

export type ComicDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ComicGetData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/comics/{id}';
};

export type ComicGetErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicGetError = ComicGetErrors[keyof ComicGetErrors];

export type ComicGetResponses = {
    /**
     * Successful Response
     */
    200: ComicEntity;
};

export type ComicGetResponse = ComicGetResponses[keyof ComicGetResponses];

export type ComicDetailData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/comics/{id}/detail';
};

export type ComicDetailErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Not Found
     */
    404: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicDetailError = ComicDetailErrors[keyof ComicDetailErrors];

export type ComicDetailResponses = {
    /**
     * Successful Response
     */
    200: ComicDetailResponse;
};

export type ComicDetailResponse2 = ComicDetailResponses[keyof ComicDetailResponses];

export type ComicUnfavorData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/comics/{id}/favor';
};

export type ComicUnfavorErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Not Found
     */
    404: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicUnfavorError = ComicUnfavorErrors[keyof ComicUnfavorErrors];

export type ComicUnfavorResponses = {
    /**
     * Successful Response
     */
    200: FavorResponse;
};

export type ComicUnfavorResponse = ComicUnfavorResponses[keyof ComicUnfavorResponses];

export type ComicFavorData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/comics/{id}/favor';
};

export type ComicFavorErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Not Found
     */
    404: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicFavorError = ComicFavorErrors[keyof ComicFavorErrors];

export type ComicFavorResponses = {
    /**
     * Successful Response
     */
    200: FavorResponse;
};

export type ComicFavorResponse = ComicFavorResponses[keyof ComicFavorResponses];

export type ComicRefreshData = {
    body?: never;
    path: {
        id: unknown;
    };
    query?: never;
    url: '/api/comics/{id}/refresh';
};

export type ComicRefreshErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Not Found
     */
    404: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicRefreshError = ComicRefreshErrors[keyof ComicRefreshErrors];

export type ComicRefreshResponses = {
    /**
     * Successful Response
     */
    200: ComicEntity;
};

export type ComicRefreshResponse = ComicRefreshResponses[keyof ComicRefreshResponses];

export type ComicRenameData = {
    body: RenameRequest;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/comics/{id}/rename';
};

export type ComicRenameErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Not Found
     */
    404: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicRenameError = ComicRenameErrors[keyof ComicRenameErrors];

export type ComicRenameResponses = {
    /**
     * Successful Response
     */
    200: RenameResponse;
};

export type ComicRenameResponse = ComicRenameResponses[keyof ComicRenameResponses];

export type ComicPageGetData = {
    body?: never;
    path: {
        id: number;
        page: number;
    };
    query?: never;
    url: '/api/comics/{id}/{page}';
};

export type ComicPageGetErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicPageGetError = ComicPageGetErrors[keyof ComicPageGetErrors];

export type ComicPageGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ComicPageLikeData = {
    body?: never;
    path: {
        id: number;
        page: number;
    };
    query?: never;
    url: '/api/comics/{id}/{page}/like';
};

export type ComicPageLikeErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicPageLikeError = ComicPageLikeErrors[keyof ComicPageLikeErrors];

export type ComicPageLikeResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ComicPageSetCoverData = {
    body?: never;
    path: {
        id: number;
        page: number;
    };
    query?: never;
    url: '/api/comics/{id}/{page}/cover';
};

export type ComicPageSetCoverErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ComicPageSetCoverError = ComicPageSetCoverErrors[keyof ComicPageSetCoverErrors];

export type ComicPageSetCoverResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ImageGetAllData = {
    body?: never;
    path?: never;
    query?: {
        top?: number;
    };
    url: '/api/images';
};

export type ImageGetAllErrors = {
    /**
     * Bad Request
     */
    400: MessageResponse;
    /**
     * Validation Error
     */
    422: MessageResponse;
};

export type ImageGetAllError = ImageGetAllErrors[keyof ImageGetAllErrors];

export type ImageGetAllResponses = {
    /**
     * Successful Response
     */
    200: Array<FileEntity>;
};

export type ImageGetAllResponse = ImageGetAllResponses[keyof ImageGetAllResponses];

export type ClientOptions = {
    baseUrl: 'http://127.0.0.1:8001' | (string & {});
};